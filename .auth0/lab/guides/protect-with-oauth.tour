{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "#5 - Protect the Promos API with OAuth 2.0",
  "nextTour": "#6 - Test the Promos App after Protecting the API",
  "steps": [
    {
      "title": "Lab overview",
      "description": "## Configure API Access Management\n\n🎯 **Objective**:   Test the Promos UI access after protecting the Promos API.\n\n⏱️ **Duration**:    10 minutes\n\n**Scenario**: After protecting the API, you test legitimate access via the Promos app."
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Review the Promos API \n\n*Notice that ./ice-resource-server/controllers/setupControllers.js has been opened for you.*\n\nHere is where the Promos API endpoints are defined. The endpoints are `/publicpromos` and `/promos`. These endpoints support `GET`, `POST`, AND `DELETE` operations.",
      "line": 49
    },
    {
      "file": "ice-resource-server/controllers/securityUtils.js",
      "description": "## Import the Okta JWT Verifier Node.js library\n*Notice that ./ice-resource-server/controllers/securityUtils.js has been opened for you.*\n\n1. **Uncomment** the line that has been highlighted in the code above to import the [Okta JWT Verifier](https://github.com/okta/okta-jwt-verifier-js) Node.js library. We'll use this to:\n\n    - Retrieve the Access Token (a JWT) from the header.\n    - Decode the Access Token.\n    - Verify the signature used to sign the Access Token.\n    - Verify the claims found inside the Access Token.",
      "line": 1,
      "selection": {
        "start": {
          "line": 6,
          "character": 1
        },
        "end": {
          "line": 9,
          "character": 55
        }
      }
    },
    {
      "file": "ice-resource-server/controllers/securityUtils.js",
      "description": "## Implement JWT verification\n*Notice that ./ice-resource-server/controllers/securityUtils.js has been opened for you.*\n\n\n\n1. Select the **Insert Code** link that follows the code snippet to insert this code into the `validationRequired` function above.\n> Review the code to understand how it uses the [Okta JWT Verifier](https://github.com/okta/okta-jwt-verifier-js) Node.js library to extract the Access Token from the authorization header, decode the claims, and verify the token signature and claims. \n\n\n```js\n//Extract the Access token\nconst authHeader = req.headers.authorization ? req.headers.authorization : \"\";\nconst match = authHeader.match(/Bearer (.+)/);\n// Return Unauthorized status if no token \nif (!match) {\n  return res.status(401).end();\n}\nconst accessToken = match[1];\n//Initiate OktaJwtVerifier\nconst verifier = new OktaJwtVerifier({\n     issuer: configs.issuer,\n     clientId: configs.clientId,\n     assertClaims: {\n       aud: configs.audience,\n       'scp.includes': scopes\n    }\n});\n//Verify the access token\nverifier.verifyAccessToken(accessToken, configs.audience)\n    .then((jwt) => {\n        req.jwt = jwt;\n        next();\n      })\n    .catch((err) => {\n        res.status(401).send(err.message);\n    });\n```",
      "line": 7,
      "selection": {
        "start": {
          "line": 7,
          "character": 49
        },
        "end": {
          "line": 7,
          "character": 122
        }
      }
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Enable JWT Verification for the Promos API\n\n*Notice that ./ice-resource-server/controllers/setupControllers.js has been opened for you.*\n\nUncomment the line highlighted above to import `validationRequired`. We'll explore that in a moment.",
      "line": 3
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Protect the GET /promos endpoint\n\nThe `GET` `/promos` endpoint exposes all promos, including premium ones, so this endpoint needs to required the `read:promos` scope. We'll use the `validationRequired` method we just implemented using the Okta JWT Verification Node.js library.\n\n1. Select the **Insert Code** link at the end of the code snippet to add it to the `GET` `/promos` implementation.\n```js\n function (req, res, next) {\n       validationRequired(req, res, next, ['promos:read']);\n     },\n```",
      "line": 64,
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 32
        }
      }
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Protect the GET /promos/:filter endpoint\n\nRecall that the `GET` `/promos/:filter` endpoint also exposes premium promos, so this endpoint needs to required the `read:promos` scope. We'll use the `validationRequired` method we just implemented using the Okta JWT Verification Node.js library.\n\n1. Select the **Insert Code** link at the end of the code snippet to add it to the `GET` `/promos` implementation.\n```js\n function (req, res, next) {\n       validationRequired(req, res, next, ['promos:read']);\n     },\n```",
      "line": 78,
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 10,
          "character": 4
        }
      }
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Protect the POST /promos endpoint\n\nNext we'll protect the `POST` `/promos` endpoint used to create new promos. This should now require the `promos:create` scope.\n\n1. Select the **Insert Code** link at the end of the code snippet to add it to the `POST` `/promos` implementation.\n```js\n function (req, res, next) {\n       validationRequired(req, res, next, ['promos:create']);\n     },\n```",
      "line": 97,
      "selection": {
        "start": {
          "line": 3,
          "character": 77
        },
        "end": {
          "line": 3,
          "character": 127
        }
      }
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Protect the DELETE /promos/:filter endpoint\n\n\nNow we'll protect the `DELETE` `/promos/:filter` endpoint used to delete certain promos. This should now require the `promos:delete` scope.\n\n1. Select the **Insert Code** link at the end of the code snippet to add it to the `DELETE` `/promos` implementation.\n```js\n function (req, res, next) {\n       validationRequired(req, res, next, ['promos:delete']);\n     },\n```",
      "line": 132
    },
    {
      "file": "ice-resource-server/controllers/setupController.js",
      "description": "## Protect the DELETE /promos endpoint\n\n\nLast, we'll protect the `DELETE` `/promos` endpoint used to delete all promos. This should now require the `promos:delete` scope.\n\n1. Select the **Insert Code** link at the end of the code snippet to add it to the `DELETE` `/promos` implementation.\n```js\n function (req, res, next) {\n       validationRequired(req, res, next, ['promos:delete']);\n     },\n```",
      "line": 157
    },
    {
      "title": "Lab checkpoint",
      "description": "## ✅ Checkpoint\n\nAYou finished protecting the Promos API. Now, people cannot access the\nprotected premium endpoints without authentication.",
      "selection": {
        "start": {
          "line": 15,
          "character": 55
        },
        "end": {
          "line": 15,
          "character": 118
        }
      }
    }
  ],
  "isPrimary": true
}